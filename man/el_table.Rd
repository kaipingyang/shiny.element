% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/el_table.R
\name{el_table}
\alias{el_table}
\title{Element UI Table Component}
\usage{
el_table(
  data = list(),
  columns = list(),
  id = NULL,
  selection = FALSE,
  border = TRUE,
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{data}{List of row data}

\item{columns}{List of column configs (see \code{el_table_config})}

\item{id}{Table ID (auto-generated if NULL)}

\item{selection}{Enable row selection}

\item{border}{Show table border}

\item{session}{Shiny session for module support}
}
\description{
Create a table widget for Shiny using Element UI.
}
\examples{
# Basic usage
data <- list(
  list(name = "A", value = 1),
  list(name = "B", value = 2)
)
columns <- list(
  list(prop = "name", label = "Name"),
  list(prop = "value", label = "Value")
)
el_table(data = data, columns = columns)

# With row selection
el_table(data = data, columns = columns, selection = TRUE)

# Shiny app example
if (interactive()) {
  library(shiny)
  library(shiny.element)
  df <- data.frame(
    name = c("A", "B", "C"),
    value = c(1, 2, 3)
  )
  config <- el_table_config(df)
  ui <- el_page(
    el_table(
      id = "my_table",
      data = config$data,
      columns = config$columns,
      selection = TRUE
    ),
    verbatimTextOutput("selected_rows")
  )
  server <- function(input, output, session) {
    output$selected_rows <- renderPrint({
      input$my_table_selected
    })
  }
  shinyApp(ui, server)
}
}
